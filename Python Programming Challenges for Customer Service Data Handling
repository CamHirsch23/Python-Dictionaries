# Initialize the ticket tracker with some sample tickets
service_tickets = {
    "Ticket001": {"Customer": "Alice", "Issue": "Login problem", "Status": "open"},
    "Ticket002": {"Customer": "Bob", "Issue": "Payment issue", "Status": "closed"}
}

# Function to open a new service ticket
def open_ticket(ticket_id, customer, issue):
    if ticket_id in service_tickets:
        print("Ticket ID already exists. Please choose a different ID.")
    else:
        service_tickets[ticket_id] = {"Customer": customer, "Issue": issue, "Status": "open"}

# Function to update the status of an existing ticket
def update_ticket_status(ticket_id, status):
    if ticket_id in service_tickets:
        service_tickets[ticket_id]["Status"] = status
    else:
        print("Ticket not found.")

# Function to display all tickets or filter by status
def display_tickets(status=None):
    if status:
        filtered_tickets = {ticket_id: ticket for ticket_id, ticket in service_tickets.items() if ticket["Status"] == status}
        if filtered_tickets:
            for ticket_id, ticket in filtered_tickets.items():
                print(f"Ticket ID: {ticket_id}")
                print(f"Customer: {ticket['Customer']}")
                print(f"Issue: {ticket['Issue']}")
                print(f"Status: {ticket['Status']}")
                print()
        else:
            print("No tickets found with the specified status.")
    else:
        for ticket_id, ticket in service_tickets.items():
            print(f"Ticket ID: {ticket_id}")
            print(f"Customer: {ticket['Customer']}")
            print(f"Issue: {ticket['Issue']}")
            print(f"Status: {ticket['Status']}")
            print()

# Open a new service ticket
open_ticket("Ticket003", "Alice", "Network connectivity issue")

# Update the status of an existing ticket
update_ticket_status("Ticket001", "closed")

# Display all tickets
display_tickets()

# Display only open tickets
display_tickets("open")
